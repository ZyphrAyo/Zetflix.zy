.navbar {
    width: 100%;
    color: white;
    font-size: 14px;
    position: fixed;
    top: 0;
    z-index: 999;
    background: linear-gradient(to top, transparent 0%, rgb(0, 0, 0, 0.3) 50%);

    // so now the idea is to make it more realistic using the use state method when we scroll up we are going to make the background blackish and when we scroll to top its gonna go transparent again
    // useState when on the top its gonna be false and when bottom its gona be true

    &.scrolled{
        background-color: var(--main-color);
    }
    .container{
        padding: 0px 50px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        height: 70px;

        .left{
            display:flex ;
            align-items: center;
            img{
                height: 40px;
                margin: 40px;
            }
            span{
                font-size: medium;
                margin: 20px;
                cursor: pointer;
            }
        }
        .right{
            display: flex;
            align-items: center;
            .icon{
                margin: 0px 15px;
                cursor: pointer;
            }
            img{
                width: 30px;
                height: 30px;
                border-radius: 5px;
                object-fit: cover;
                cursor: pointer;
            }
            .profile{
                .options{
                    display: none;
                    background-color: var(--main-color);
                    border-radius: 5px;
                }
                span{
                    font-size: medium;
                    padding: 10px;
                    cursor: pointer;
                }
                // on hover is a sudo class which will affect the options
                &:hover{
                    .options{
                        display: flex;
                        flex-direction: column;
                        position: absolute;
                    }
                }
            }
        }
    }
}